<?php

namespace {{ class.className.namespace }};

use Doctrine\ORM\Mapping as ORM;

/**
 * @ORM\Table(name="{{ class.tableName }}")
 * @ORM\Entity
 */
final class {{ class.className.name }}
{
    /**
     * @var int
     *
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     * @ORM\Column(type="integer")
     */
    private $id;
{% for parameter in class.parameters %}

    /**
     * @ORM\Column(type="{{ parameter.dbalType }}"{% if parameter.nullable %}, nullable=true{% endif %})
     */
    private ${{ parameter.name }};
{% endfor %}
{% if class.parameters|length > 0 %}

    public function __construct(
    {% for parameter in class.parameters %}
    {{ parameter.dbalType.phpType }} ${{ parameter.name }}{% if not loop.last %},{% endif %}
    {%- endfor %}

    ) {
    {% for parameter in class.parameters %}
    $this->{{ parameter.name }} = ${{ parameter.name }};
    {% endfor -%}
}
{% endif %}

    public function getId(): int
    {
        return $this->id;
    }
{% for parameter in class.parameters %}

    public function get{{ parameter.name|capitalize }}(): {% if parameter.nullable %}?{% endif %}{{ parameter.dbalType.phpType }}
    {
        return $this->{{ parameter.name }};
    }
{% endfor %}
}
